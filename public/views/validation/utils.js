import auth from '../../models/Auth.js';
import user from '../../models/User.js';

export default {
    getAllErrors() {
        return ['Незаполненное поле ввода', // 0
            'Введите имя на кириллице', // 1
            'Укажите Вашу электронную почту', // 2
            'Неверный формат электронной почты', // 3
            'Укажите тему сообщения', // 4
            'Напишите текст сообщения', // 5
            'Сообщение похоже на спам, уберите специальные символы.', // 6
            'Неподходящий логин', // 7
            'Введите фамилию на кириллице', // 8
            'Сообщение похоже на спам, уберите специальные символы.', // 9
            'Выберите специальность из списка', // 10
            'Неверный формат телефонного номера', // 11
            'Неверный формат', // 12
            'Пароли не совпадают', // 13
            'Введите цену в рублях', // 14
            'Некорректная дата', // 15
            'Некорректная ставка', // 16
            'Вряд ли вы столько проживёте...', // 17
            'Недопустимая длина', // 18
            'Если вы настолько богаты скиньте нам', // 19
            'Недопустимая сумма', // 20
        ];
    },

    getAllPatterns() {
        return new Map([['name', /^[а-яёА-ЯЁ\s]+$/],
            // eslint-disable-next-line max-len
            ['mail', /^[A-Za-z0-9](([_.-]?[a-zA-Z0-9]+)*)@([A-Za-z0-9]+)(([.-]?[a-zA-Z0-9]+)*)\.([A-Za-z])+$/],
            // eslint-disable-next-line max-len
            ['spam', /^[a-zA-ZА-ЯЁа-яё0-9-_.,!?%#№+=;:\\/}{\[\]"'@~`&()\s]+$/], ['user_name', /^[a-zA-Z0-9]{0,19}$/],
            // eslint-disable-next-line max-len
            ['password', /([a-z]+[A-Z]+[0-9]+|[a-z]+[0-9]+[A-Z]+|[A-Z]+[a-z]+[0-9]+|[A-Z]+[0-9]+[a-z]+|[0-9]+[a-z]+[A-Z]+|[0-9]+[A-Z]+[a-z]+)/],
            ['price', /^[0-9]+$/],
            // eslint-disable-next-line max-len
            ['date', /^(0?[1-9]|[12][0-9]|3[01])[.](0?[1-9]|1[012])[.]\d{4}$/],
        ]);
    },

    /**
     * Проверка авторизации
     */
    async checkAuthorized() {
        return auth.isAuthorized()
            .then((res) => {
                if (res.ok) {
                    return res.json();
                }
            })
            .then((result) => {
                if (result) {
                    user.isAuthorized = true;
                    user.id = result.id;
                    user.isExecutor = result.executor;
                }
            });
    },
};

